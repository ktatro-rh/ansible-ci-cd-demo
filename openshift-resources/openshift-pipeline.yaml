---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: hello-pipeline
  namespace: demo-test
spec:
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/ktatro-rh/bonjour.git'
        - name: revision
          value: ''
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:1a50511583fc02a27012d17d942e247813404104ddd282d7e26f99765174392c
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: s2i-nodejs
      params:
        - name: VERSION
          value: latest
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/aap/hello-world:latest
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:00795fafdab9bbaa22cd29d1faa1a01e604e4884a2c935c1bf8e3d1f0ad1c084
        - name: SKIP_PUSH
          value: 'false'
        - name: ENV_VARS
          value: []
      runAfter:
        - timestamp-task
      taskRef:
        kind: ClusterTask
        name: s2i-nodejs
      workspaces:
        - name: source
          workspace: workspace
    - name: timestamp-task
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: timestamp-task
  workspaces:
    - name: workspace

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
  name: event-listener-hello-github
  namespace: demo-test
spec:
  namespaceSelector: {}
  resources: {}
  serviceAccountName: pipeline
  triggers:
    - bindings:
        - kind: ClusterTriggerBinding
          ref: github-push
      template:
        ref: trigger-template-hello-github
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: trigger-template-hello-github
  namespace: demo-test
spec:
  params:
    - name: git-revision
    - name: git-commit-message
    - name: git-repo-url
    - name: git-repo-name
    - name: content-type
    - name: pusher-name
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        annotations:
          pipeline.openshift.io/started-by: admin
        generateName: hello-pipeline-
        labels:
          tekton.dev/pipeline: hello-pipeline
        namespace: aap
      spec:
        params: []
        pipelineRef:
          name: hello-pipeline
        resources: []
        status: null
        workspaces:
          - name: workspace
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
                storageClassName: gp3-csi
                volumeMode: Filesystem
